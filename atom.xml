<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>mahggo</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-08-19T09:07:02.541Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>hong ma</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2017/08/19/vuenews/"/>
    <id>http://yoursite.com/2017/08/19/vuenews/</id>
    <published>2017-08-19T09:07:02.955Z</published>
    <updated>2017-08-19T09:07:02.541Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="Vue-js简介"><a href="#Vue-js简介" class="headerlink" title="Vue.js简介"></a>Vue.js简介</h2><blockquote>
<p>Vue.js（读音 /vjuː/，类似于 view） 是一套构建用户界面的渐进式框架。与其他重量级框架不同的是，Vue 采用自底向上增量开发的设计。Vue 的核心库只关注视图层，它不仅易于上手，还便于与第三方库或既有项目整合。另一方面，当与单文件组件和 Vue 生态系统支持的库结合使用时，Vue 也完全能够为复杂的单页应用程序提供驱动。</p>
</blockquote>
<p><a href="https://cn.vuejs.org/v2/api/#选项-生命周期钩子" target="_blank" rel="external">Vue.js文档</a><br><a id="more"></a></p>
<h2 id="MVVM与Vue-js"><a href="#MVVM与Vue-js" class="headerlink" title="MVVM与Vue.js"></a>MVVM与Vue.js</h2><ul>
<li>MVVM采用双向绑定（data-binding）：View的变动，自动反映在 ViewModel，反之亦然。Angular 和 Ember 都采用这种模式。<br><img src="http://oo6is6uyg.bkt.clouddn.com/bg2015020110.png" alt="image"><br><a href="http://www.ruanyifeng.com/blog/2015/02/mvcmvp_mvvm.html" target="_blank" rel="external">MVC，MVP 和 MVVM 的图示</a></li>
</ul>
<ul>
<li><p>Vue.js 可以说是MVVM 架构的最佳实践，专注于 MVVM 中的 ViewModel，不仅做到了数据双向绑定，而且也是一款相对比较轻量级的JS 库，API 简洁，很容易上手。Vue的基础知识网上有现成的教程，此处不再赘述， 下面简单了解一下 Vue.js 关于双向绑定的一些实现细节：</p>
<p>Vue.js 是采用 Object.defineProperty 的 getter 和 setter，并结合观察者模式来实现数据绑定的。当把一个普通 Javascript 对象传给 Vue 实例来作为它的 data 选项时，Vue 将遍历它的属性，用 Object.defineProperty 将它们转为 getter/setter。用户看不到 getter/setter，但是在内部它们让 Vue 追踪依赖，在属性被访问和修改时通知变化。</p>
<p><img src="http://oo6is6uyg.bkt.clouddn.com/849589-20161106211631549-2019592745.png" alt="image"></p>
</li>
</ul>
<p>  observer 数据监听器，能够对数据对象的所有属性进行监听，如有变动可拿到最新值并通知订阅者，内部采用Object.defineProperty的getter和setter来实现。</p>
<p>  Compile 指令解析器，它的作用对每个元素节点的指令进行扫描和解析，根据指令模板替换数据，以及绑定相应的更新函数。</p>
<p>  Watcher 订阅者， 作为连接 Observer 和 Compile 的桥梁，能够订阅并收到每个属性变动的通知，执行指令绑定的相应回调函数。</p>
<p>  Dep 消息订阅器，内部维护了一个数组，用来收集订阅者（Watcher），数据变动触发notify 函数，再调用订阅者的 update 方法。</p>
<p>  图中可以看出，当执行 new Vue() 时，Vue 就进入了初始化阶段，一方面Vue 会遍历 data 选项中的属性，并用 Object.defineProperty 将它们转为 getter/setter，实现数据变化监听功能；另一方面，Vue 的指令编译器Compile 对元素节点的指令进行扫描和解析，初始化视图，并订阅Watcher 来更新视图， 此时Wather 会将自己添加到消息订阅器中(Dep),初始化完毕。</p>
<p>  当数据发生变化时，Observer 中的 setter 方法被触发，setter 会立即调用Dep.notify()，Dep 开始遍历所有的订阅者，并调用订阅者的 update 方法，订阅者收到通知后对视图进行相应的更新。</p>
<p><a href="http://www.cnblogs.com/onepixel/p/6034307.html" target="_blank" rel="external">Vue.js 和 MVVM 小细节</a></p>
<h2 id="安装nodejs环境"><a href="#安装nodejs环境" class="headerlink" title="安装nodejs环境"></a>安装nodejs环境</h2><p><img src="http://oo6is6uyg.bkt.clouddn.com/node.jpg" alt="Git"></p>
<h3 id="关于node"><a href="#关于node" class="headerlink" title="关于node"></a>关于node</h3><blockquote>
<ul>
<li>Node.js® is a JavaScript runtime built on Chrome’s V8 JavaScript engine.</li>
<li>Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient.</li>
<li>Node.js’ package ecosystem, npm, is the largest ecosystem of open source libraries in the world.</li>
</ul>
</blockquote>
<h4 id="可以总结为下面几点"><a href="#可以总结为下面几点" class="headerlink" title="可以总结为下面几点"></a>可以总结为下面几点</h4><p><img src="http://oo6is6uyg.bkt.clouddn.com/node1.jpg" alt="Node"></p>
<h3 id="安装-CentOs-6-5"><a href="#安装-CentOs-6-5" class="headerlink" title="安装( CentOs 6.5)"></a>安装( CentOs 6.5)</h3><h4 id="获得源码包-Latest-LTS-Version-v6-10-2-includes-npm-3-10-10"><a href="#获得源码包-Latest-LTS-Version-v6-10-2-includes-npm-3-10-10" class="headerlink" title="获得源码包 Latest LTS Version: v6.10.2 (includes npm 3.10.10)"></a>获得源码包 Latest LTS Version: v6.10.2 (includes npm 3.10.10)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ wget https://nodejs.org/dist/v6.10.2/node-v6.10.2-linux-x86.tar.xz</div></pre></td></tr></table></figure>
<p>More info: <a href="https://nodejs.org/en/download/" target="_blank" rel="external">下载node</a></p>
<h4 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 解压.xz获得tar包</span></div><div class="line">$ xz <span class="_">-d</span> node-v6.10.2-linux-x86.tar.xz</div><div class="line"><span class="comment"># 解压tar包</span></div><div class="line">$ tar xvf node-v6.10.2-linux-x86.tar</div></pre></td></tr></table></figure>
<h4 id="将bin文件夹添加到用户环境变量"><a href="#将bin文件夹添加到用户环境变量" class="headerlink" title="将bin文件夹添加到用户环境变量"></a>将bin文件夹添加到用户环境变量</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> ~ &amp;&amp; vim .bashrc</div><div class="line"><span class="comment"># 把你的bin文件目录添加到$PATH</span></div><div class="line">$ <span class="built_in">export</span> PATH=<span class="string">"<span class="variable">$PATH</span>:/your_path/node-v6.10.2-linux-x86/bin"</span></div><div class="line">$ <span class="built_in">source</span> .bashrc</div><div class="line"><span class="comment"># 查看Node</span></div><div class="line">$ node --help</div><div class="line"><span class="comment"># 一起安装的npm</span></div><div class="line">$ npm --help</div></pre></td></tr></table></figure>
<p><img src="http://oo6is6uyg.bkt.clouddn.com/node.png" alt="添加bin目录到环境变量"></p>
<h2 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h2><pre><code>v-if,v-for,v-on,v-bind,v-model
</code></pre><p><a href="https://cn.vuejs.org/v2/api/#指令" target="_blank" rel="external">Vue.js指令</a></p>
<h2 id="vue-cli何物"><a href="#vue-cli何物" class="headerlink" title="vue-cli何物"></a>vue-cli何物</h2><p>Vue-cli是Vue的脚手架工具</p>
<blockquote>
<p>主要作用：目录结构、本地调试、代码部署、热加载、单元测试</p>
</blockquote>
<p>安装</p>
<pre><code>#vue-cli
npm inastll -g vue-cli

#初始化
vue init webpack vuenews

# 可以一直回车 最后两个no

# 安装所需要的依赖. 
cd vuenews &amp;&amp; npm install

npm install vue-resource --save

# 运行服务 打开 http://localhost:8080/#/ 
npm run dev
</code></pre><h2 id="入手组件compentent"><a href="#入手组件compentent" class="headerlink" title="入手组件compentent"></a>入手组件compentent</h2><p>组件的生命周期</p>
<p><a href="https://cn.vuejs.org/v2/guide/instance.html" target="_blank" rel="external">组件的生命周期</a></p>
<p><img src="http://oo6is6uyg.bkt.clouddn.com/lifecycle.png" alt="image"></p>
<p>src 目录结构</p>
<pre><code>.
├── App.vue  #父组件
├── assets
│   └── logo.png
├── components  #子组件
│   ├── Newslist.vue
│   └── SourceSelection.vue
└── main.js # 入口文件
</code></pre><p>  App.vue</p>
<pre><code>&lt;template&gt;
    &lt;div class=&quot;container&quot; id=&quot;app&quot;&gt;
        &lt;SourceSelection v-on:sourceChanged=&quot;setSource&quot;&gt;&lt;/SourceSelection&gt;
        &lt;Newslist v-bind:source=&quot;source&quot;&gt;&lt;/Newslist&gt;
    &lt;/div&gt;
&lt;/template&gt;

&lt;script&gt;
    import SourceSelection from &apos;./components/SourceSelection&apos;
    import Newslist from &apos;./components/Newslist&apos;

    export default {
        name: &apos;app&apos;,
        components: {
            SourceSelection,
            Newslist
        },
        data(){
           return {
               source: &quot;&quot;
           }
        },
        methods: {
            //自定义事件sourceChanged 调用,
            //子组件触发事件　this.$emit(sourceChanged,source)
            setSource : function (source) {
                this.source = source;
            }
        }

    }
&lt;/script&gt;

&lt;style&gt;
    #app {
        padding-top: 20px;

    }
&lt;/style&gt;
</code></pre><h2 id="子组件的挂载到父组件"><a href="#子组件的挂载到父组件" class="headerlink" title="子组件的挂载到父组件"></a>子组件的挂载到父组件</h2><pre><code># 在父组件中引入子组件

# ES2015 的写法

import SourceSelection from &apos;./components/SourceSelection&apos;
import Newslist from &apos;./components/Newslist&apos;

# 在子组件

export default{
    name : &apos;sourceselection&apos;,
    data () {
        return {
            sources : [],
            source : &apos;&apos;
        }

    },
    methods: {

    },
    created: function () {

    }

}

# 在父组件vm中写入

components: {
            SourceSelection,
            Newslist
        },
</code></pre><h2 id="父子组件数据传递"><a href="#父子组件数据传递" class="headerlink" title="父子组件数据传递"></a>父子组件数据传递</h2><h3 id="父组件vm写入"><a href="#父组件vm写入" class="headerlink" title="父组件vm写入"></a>父组件vm写入</h3><pre><code>data(){
       return {
           source: &quot;&quot;
       }
    },
</code></pre><h3 id="子组件vm写入"><a href="#子组件vm写入" class="headerlink" title="子组件vm写入"></a>子组件vm写入</h3><pre><code>props: [&apos;source&apos;],
</code></pre><h2 id="父子组件通信之自定义事件"><a href="#父子组件通信之自定义事件" class="headerlink" title="父子组件通信之自定义事件"></a>父子组件通信之自定义事件</h2><h3 id="第一步：父组件初始化数据"><a href="#第一步：父组件初始化数据" class="headerlink" title="第一步：父组件初始化数据"></a>第一步：父组件初始化数据</h3><pre><code>data(){
       return {
           source: &quot;&quot;
       }
    },
</code></pre><h3 id="第二步：在父组件中设置方法"><a href="#第二步：在父组件中设置方法" class="headerlink" title="第二步：在父组件中设置方法"></a>第二步：在父组件中设置方法</h3><pre><code>methods: {
        //自定义事件sourceChanged 调用,
        //子组件触发事件　this.$emit(sourceChanged,source)
        setSource : function (source) {
            this.source = source;
        }
    }
</code></pre><p>###第三步触发这个方法 </p>
<ul>
<li><p>在子组件中设置一个自定义事件 </p>
<pre><code>&lt;SourceSelection v-on:sourceChanged=&quot;setSource&quot;&gt;&lt;/SourceSelection&gt;
</code></pre></li>
</ul>
<ul>
<li><p>sourceChanged是一个自定义事件名称。<br>在子组件中通过this.$emit(“事件名”,参数)来触发父组件的事件</p>
<pre><code>this.$emit(&apos;sourceChanged&apos;, this.source.id);
</code></pre></li>
</ul>
<h2 id="发送Http请求vue-resouce"><a href="#发送Http请求vue-resouce" class="headerlink" title="发送Http请求vue-resouce"></a>发送Http请求vue-resouce</h2><p><a href="https://github.com/pagekit/vue-resource/blob/develop/docs/http.md" target="_blank" rel="external">vue-resouce</a></p>
<pre><code>methods: {
        updateSource: function(source) {
            this.$http.get(&apos;https://newsapi.org/v1/articles?source=&apos; + source + &apos;&amp;apikey=1126b7ebda004eb7b9d2bcae1cfcc5ba&apos;)
                .then((response)=&gt;{
                    this.articles = response.data.articles;
                })
        }
    },
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Vue-js简介&quot;&gt;&lt;a href=&quot;#Vue-js简介&quot; class=&quot;headerlink&quot; title=&quot;Vue.js简介&quot;&gt;&lt;/a&gt;Vue.js简介&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Vue.js（读音 /vjuː/，类似于 view） 是一套构建用户界面的渐进式框架。与其他重量级框架不同的是，Vue 采用自底向上增量开发的设计。Vue 的核心库只关注视图层，它不仅易于上手，还便于与第三方库或既有项目整合。另一方面，当与单文件组件和 Vue 生态系统支持的库结合使用时，Vue 也完全能够为复杂的单页应用程序提供驱动。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://cn.vuejs.org/v2/api/#选项-生命周期钩子&quot;&gt;Vue.js文档&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>晴天</title>
    <link href="http://yoursite.com/2017/07/30/sunday/"/>
    <id>http://yoursite.com/2017/07/30/sunday/</id>
    <published>2017-07-30T04:22:39.408Z</published>
    <updated>2017-07-30T04:22:39.323Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><img src="http://oo6is6uyg.bkt.clouddn.com/qingtian.jpg" alt="晴天"><br><a id="more"></a></p>
<blockquote>
<pre><code>专辑:叶惠美  
作词:周杰伦
作曲:周杰伦
编曲:周杰伦
</code></pre></blockquote>
<div id="aplayer0" class="aplayer" style="margin-bottom: 20px;">
				<pre class="aplayer-lrc-content">'﻿[total:270]
[ti:晴天]
[ar:周杰伦]
[al:叶惠美]
[by:]
[offset:0]
[00:00.40]晴天 - 周杰伦
[00:01.52]词：周杰伦
[00:02.64]曲：周杰伦
[00:04.02]
[00:29.40]故事的小黄花
[00:32.65]从出生那年就飘着
[00:36.20]童年的荡秋千
[00:39.70]随记忆一直晃到现在
[00:43.00]rui sou sou xi dou xi la
[00:46.12]sou la xi xi xi xi la xi la sou
[00:49.80]吹着前奏望着天空
[00:53.36]我想起花瓣试着掉落
[00:56.79]为你翘课的那一天
[00:59.04]花落的那一天
[01:00.66]教室的那一间
[01:02.22]我怎么看不见
[01:04.03]消失的下雨天
[01:05.72]我好想再淋一遍
[01:09.09]
[01:09.96]没想到失去的勇气我还留着
[01:15.02]
[01:16.14]好想再问一遍
[01:17.88]你会等待还是离开
[01:23.19]
[01:24.75]刮风这天我试过握着你手
[01:30.43]但偏偏雨渐渐大到我看你不见
[01:37.67]
[01:38.85]还要多久我才能在你身边
[01:44.66]
[01:45.41]等到放晴的那天也许我会比较好一点
[01:52.77]从前从前有个人爱你很久
[01:58.51]但偏偏风渐渐把距离吹得好远
[02:05.87]
[02:06.75]好不容易又能再多爱一天
[02:13.36]但故事的最后你好像还是说了拜拜
[02:21.47]
[02:35.01]为你翘课的那一天
[02:36.76]花落的那一天
[02:38.64]教室的那一间
[02:40.32]我怎么看不见
[02:42.06]消失的下雨天
[02:43.75]我好想再淋一遍
[02:47.00]
[02:47.99]没想到失去的勇气我还留着
[02:53.61]
[02:54.54]好想再问一遍
[02:55.98]你会等待还是离开
[03:01.78]
[03:02.78]刮风这天我试过握着你手
[03:08.46]但偏偏雨渐渐大到我看你不见
[03:15.95]
[03:16.88]还要多久我才能在你身边
[03:23.50]等到放晴的那天也许我会比较好一点
[03:30.92]从前从前有个人爱你很久
[03:37.04]偏偏风渐渐把距离吹得好远
[03:43.90]
[03:44.78]好不容易又能再多爱一天
[03:50.39]
[03:51.08]但故事的最后你好像还是说了拜拜
[03:59.63]刮风这天我试过握着你手
[04:02.06]但偏偏雨渐渐大到我看你不见
[04:05.45]还要多久我才能够在你身边
[04:09.00]等到放晴那天也许我会比较好一点
[04:12.87]从前从前有个人爱你很久
[04:15.87]但偏偏雨渐渐把距离吹得好远
[04:19.30]好不容易又能再多爱一天
[04:22.80]但故事的最后你好像还是说了
[04:25.85]拜~</pre>
			</div>
			<script>
				new APlayer({
					element: document.getElementById("aplayer0"),
					narrow: false,
					autoplay: 0,
					showlrc: 2,
					music: {
						title: "晴天",
						author: "周杰伦",
						url: "http://oo6is6uyg.bkt.clouddn.com/0503%E6%99%B4%E5%A4%A9.mp3",
						pic: "",
					}
				});
			</script>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">歌词:</div><div class="line">故事的小黄花 从出生那年就飘着</div><div class="line">童年的荡秋千 随记忆一直晃到现在</div><div class="line"></div><div class="line">Re So So Si Do Si La So La</div><div class="line">Si Si Si Si La Si La So</div><div class="line">吹着前奏望着天空</div><div class="line">我想起花瓣试着掉落</div><div class="line"></div><div class="line">为你翘课的那一天 花落的那一天</div><div class="line">教室的那一间 我怎么看不见</div><div class="line">消失的下雨天 我好想再淋一遍</div><div class="line">没想到失去的勇气我还留着</div><div class="line">好想再问一遍 你会等待还是离开</div><div class="line"></div><div class="line">刮风这天 我试过握着你手</div><div class="line">但偏偏 雨渐渐 大到我看你不见</div><div class="line">还要多久 我才能在你身边</div><div class="line">等到放晴的那天 也许我会比较好一点</div><div class="line"></div><div class="line">从前从前 有个人爱你很久</div><div class="line">但偏偏 风渐渐 把距离吹得好远</div><div class="line">好不容易 又能再多爱一天</div><div class="line">但故事的最后 你好像还是说了拜拜</div><div class="line"></div><div class="line">(Rap)</div><div class="line">刮风这天 我试过握着你手</div><div class="line">但偏偏 雨渐渐 大到我看你不见</div><div class="line">还要多久 我才能够在你身边</div><div class="line">等到放晴的那天 也许 我会比较好一点</div><div class="line"></div><div class="line">从前从前 有个人爱你很久</div><div class="line">但偏偏 风渐渐 把距离吹得好远</div><div class="line">好不容易 又能再多爱一天</div><div class="line">但故事的最后 你好像还是说了拜拜</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oo6is6uyg.bkt.clouddn.com/qingtian.jpg&quot; alt=&quot;晴天&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CentOs安装memcache</title>
    <link href="http://yoursite.com/2017/07/23/memcached/"/>
    <id>http://yoursite.com/2017/07/23/memcached/</id>
    <published>2017-07-23T12:59:31.826Z</published>
    <updated>2017-07-23T12:59:31.770Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><img src="http://oo6is6uyg.bkt.clouddn.com/web_6.jpg" alt="Git"><br><a id="more"></a></p>
<blockquote>
<p>Memcached是一个自由开源的，高性能，分布式内存对象缓存系统。<br>  Memcached是一种基于内存的key-value存储，用来存储小块的任意数据（字符串、对象）。这些数据可以是数据库调用、API调用或者是页面渲染的结果。<br>  一般的使用目的是，通过缓存数据库查询结果，减少数据库访问次数，以提高动态Web应用的速度、提高可扩展性。<br>  Memcached 官网：<a href="http://memcached.org/memcached.md" target="_blank" rel="external">memcached.org</a></p>
</blockquote>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 安装依赖</span></div><div class="line">yum install libevent libevent-devel -y</div><div class="line"></div><div class="line"><span class="comment"># 下载最新版本</span></div><div class="line">wget http://memcached.org/latest </div><div class="line">                 </div><div class="line"><span class="comment"># 解压源码</span></div><div class="line">tar -zxvf latest  </div><div class="line">              </div><div class="line"><span class="comment"># 进入目录</span></div><div class="line"><span class="built_in">cd</span> memcached-1.x.x</div><div class="line">                                 </div><div class="line"><span class="comment"># 配置</span></div><div class="line">./configure --prefix=/usr/<span class="built_in">local</span>/memcached          </div><div class="line"></div><div class="line"><span class="comment">#  编译</span></div><div class="line">make &amp;&amp; make <span class="built_in">test</span>                                 </div><div class="line"></div><div class="line"><span class="comment">#   安装 </span></div><div class="line">sudo make install</div></pre></td></tr></table></figure>
<h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">   </div><div class="line">memcached <span class="_">-d</span> -m 100M -u nobody <span class="_">-l</span> 127.0.0.1 -p 12000 -c 1000 -P /tmp/memcached.pid</div><div class="line"></div><div class="line"><span class="_">-d</span> 选项是启动一个守护进程， </div><div class="line">-m 是分配给Memcache使用的内存数量，单位是MB，这里是100MB </div><div class="line">-u 是运行Memcache的用户，这里是root </div><div class="line"><span class="_">-l</span> 是监听的服务器IP地址，如果有多个地址的话，这里指定了服务器的IP地址127.0.0.1 </div><div class="line">-p 是设置Memcache监听的端口，这里设置了12000，最好是1024以上的端口 </div><div class="line">-c 选项是最大运行的并发连接数，默认是1024，这里设置了1000，按照你服务器的负载量来设定 </div><div class="line">-P 是设置保存Memcache的pid文件</div></pre></td></tr></table></figure>
<p><img src="http://oo6is6uyg.bkt.clouddn.com/memcached_1.png" alt="image"></p>
<h2 id="关闭"><a href="#关闭" class="headerlink" title="关闭"></a>关闭</h2><pre><code>kill `cat /tmp/memcached.pid`
</code></pre><h2 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h2><pre><code>telnet 127.0.0.1
</code></pre><p><img src="http://oo6is6uyg.bkt.clouddn.com/memcached_2.png" alt="image"></p>
<p><a href="http://blog.sina.com.cn/s/blog_493a845501013ei0.html" target="_blank" rel="external">分布式缓存-Memcached</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oo6is6uyg.bkt.clouddn.com/web_6.jpg&quot; alt=&quot;Git&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CentOs安装Git</title>
    <link href="http://yoursite.com/2017/07/22/git/"/>
    <id>http://yoursite.com/2017/07/22/git/</id>
    <published>2017-07-22T01:16:52.954Z</published>
    <updated>2017-07-22T01:16:52.876Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><img src="http://oo6is6uyg.bkt.clouddn.com/0.jpg" alt="Git"><br><a id="more"></a></p>
<h3 id="获得源码包-这里是GitHub上的最新版本"><a href="#获得源码包-这里是GitHub上的最新版本" class="headerlink" title="获得源码包 这里是GitHub上的最新版本"></a>获得源码包 这里是GitHub上的最新版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ wget https://github.com/git/git/archive/v2.12.2.tar.gz</div></pre></td></tr></table></figure>
<p>More info: <a href="https://github.com/git/git/releases" target="_blank" rel="external">下载git</a></p>
<h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ yum install  gcc gcc-c++ curl-devel expat-devel gettext-devel openssl-devel perl-devel zlib-devel -y</div></pre></td></tr></table></figure>
<h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 解压.gz</span></div><div class="line">$ tar zxvf git-2.12.2.tar.gz</div></pre></td></tr></table></figure>
<h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 生成配置文件</span></div><div class="line">$ <span class="built_in">cd</span> git-2.12.2 </div><div class="line">$ make configure</div><div class="line"><span class="comment"># 指定安装目录</span></div><div class="line">$ ./configure --prefix=/usr/<span class="built_in">local</span>/git</div><div class="line"><span class="comment"># 编译</span></div><div class="line">$ make &amp;&amp; make install</div></pre></td></tr></table></figure>
<h3 id="将bin文件夹添加到用户环境变量"><a href="#将bin文件夹添加到用户环境变量" class="headerlink" title="将bin文件夹添加到用户环境变量"></a>将bin文件夹添加到用户环境变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> ~ &amp;&amp; vim .bashrc</div><div class="line"><span class="comment"># 把你的bin文件目录添加到$PATH</span></div><div class="line">$ <span class="built_in">export</span> PATH=<span class="string">"<span class="variable">$PATH</span>:/usr/local/git/bin"</span></div><div class="line">$ <span class="built_in">source</span> .bashrc</div><div class="line"><span class="comment"># 查看git</span></div><div class="line">$ git --version</div></pre></td></tr></table></figure>
<h3 id="添加git账号"><a href="#添加git账号" class="headerlink" title="添加git账号"></a>添加git账号</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ groupadd git </div><div class="line">$ useradd -g git git</div><div class="line"><span class="comment"># 为git账号添加密码</span></div><div class="line">$ passwd git</div></pre></td></tr></table></figure>
<h3 id="创建远程仓库"><a href="#创建远程仓库" class="headerlink" title="创建远程仓库"></a>创建远程仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$ mkdir ~/git</div><div class="line">$ chown git:git git</div><div class="line"><span class="comment"># 生成 密钥 -t指定算法</span></div><div class="line">$ ssh-keygen -t rsa</div><div class="line">$ mv /用户/.ssh/id_rsa.pub /用户/.ssh/authorized_keys</div><div class="line">$ chmod 600 /用户/.ssh/authorized_keys</div><div class="line"><span class="comment"># 把你的ssh公钥加进authorized_keys</span></div><div class="line">$ vim /用户/.ssh/authorized_keys</div><div class="line"><span class="comment"># 创建远程仓库</span></div><div class="line">$ <span class="built_in">cd</span> ~/git &amp;&amp; git init --bare blog.git</div><div class="line"><span class="comment"># 在客户端克隆</span></div><div class="line">$ git <span class="built_in">clone</span> ssh://git@ip:port/用户/git/blog.git/</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oo6is6uyg.bkt.clouddn.com/0.jpg&quot; alt=&quot;Git&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CentOs环境安装Node</title>
    <link href="http://yoursite.com/2017/04/20/Node/"/>
    <id>http://yoursite.com/2017/04/20/Node/</id>
    <published>2017-04-20T11:37:15.406Z</published>
    <updated>2017-04-20T11:37:15.376Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><img src="http://oo6is6uyg.bkt.clouddn.com/node.jpg" alt="Git"><br><a id="more"></a></p>
<h3 id="关于node"><a href="#关于node" class="headerlink" title="关于node"></a>关于node</h3><blockquote>
<ul>
<li>Node.js® is a JavaScript runtime built on Chrome’s V8 JavaScript engine.</li>
<li>Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient.</li>
<li>Node.js’ package ecosystem, npm, is the largest ecosystem of open source libraries in the world.</li>
</ul>
</blockquote>
<h4 id="可以总结为下面几点"><a href="#可以总结为下面几点" class="headerlink" title="可以总结为下面几点"></a>可以总结为下面几点</h4><p><img src="http://oo6is6uyg.bkt.clouddn.com/node1.jpg" alt="Node"></p>
<h3 id="安装-CentOs-6-5"><a href="#安装-CentOs-6-5" class="headerlink" title="安装( CentOs 6.5)"></a>安装( CentOs 6.5)</h3><h4 id="获得源码包-Latest-LTS-Version-v6-10-2-includes-npm-3-10-10"><a href="#获得源码包-Latest-LTS-Version-v6-10-2-includes-npm-3-10-10" class="headerlink" title="获得源码包 Latest LTS Version: v6.10.2 (includes npm 3.10.10)"></a>获得源码包 Latest LTS Version: v6.10.2 (includes npm 3.10.10)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ wget https://nodejs.org/dist/v6.10.2/node-v6.10.2-linux-x86.tar.xz</div></pre></td></tr></table></figure>
<p>More info: <a href="https://nodejs.org/en/download/" target="_blank" rel="external">下载node</a></p>
<h4 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 解压.xz获得tar包</span></div><div class="line">$ xz <span class="_">-d</span> node-v6.10.2-linux-x86.tar.xz</div><div class="line"><span class="comment"># 解压tar包</span></div><div class="line">$ tar xvf node-v6.10.2-linux-x86.tar</div></pre></td></tr></table></figure>
<h4 id="将bin文件夹添加到用户环境变量"><a href="#将bin文件夹添加到用户环境变量" class="headerlink" title="将bin文件夹添加到用户环境变量"></a>将bin文件夹添加到用户环境变量</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> ~ &amp;&amp; vim .bashrc</div><div class="line"><span class="comment"># 把你的bin文件目录添加到$PATH</span></div><div class="line">$ <span class="built_in">export</span> PATH=<span class="string">"<span class="variable">$PATH</span>:/your_path/node-v6.10.2-linux-x86/bin"</span></div><div class="line">$ <span class="built_in">source</span> .bashrc</div><div class="line"><span class="comment"># 查看Node</span></div><div class="line">$ node --help</div><div class="line"><span class="comment"># 一起安装的npm</span></div><div class="line">$ npm --help</div></pre></td></tr></table></figure>
<p><img src="http://oo6is6uyg.bkt.clouddn.com/node.png" alt="添加bin目录到环境变量"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oo6is6uyg.bkt.clouddn.com/node.jpg&quot; alt=&quot;Git&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>HEXO搭建个人博客</title>
    <link href="http://yoursite.com/2017/04/20/blog/"/>
    <id>http://yoursite.com/2017/04/20/blog/</id>
    <published>2017-04-20T11:36:17.911Z</published>
    <updated>2017-04-20T11:36:17.868Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><img src="http://oo6is6uyg.bkt.clouddn.com/hexo.png" alt="hexo"><br><a id="more"></a></p>
<h2 id="什么是HEXO"><a href="#什么是HEXO" class="headerlink" title="什么是HEXO"></a>什么是HEXO</h2><p><a href="https://hexo.io/zh-cn/" target="_blank" rel="external">hexo</a>是一款基于<a href="https://nodejs.org" target="_blank" rel="external">Node.js</a>的快速、简洁且高效的博客框架</p>
<blockquote>
<ul>
<li>超快速度 : Node.js 所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染。</li>
<li>支持 Markdown : Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。</li>
</ul>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oo6is6uyg.bkt.clouddn.com/hexo.png&quot; alt=&quot;hexo&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CentOs安装Lamp</title>
    <link href="http://yoursite.com/2017/04/10/Lamp/"/>
    <id>http://yoursite.com/2017/04/10/Lamp/</id>
    <published>2017-04-10T10:13:48.000Z</published>
    <updated>2017-04-10T14:57:08.437Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="Linux下编译安装apache2-4-php5-6-mysql5-6"><a href="#Linux下编译安装apache2-4-php5-6-mysql5-6" class="headerlink" title="Linux下编译安装apache2.4,php5.6,mysql5.6"></a>Linux下编译安装apache2.4,php5.6,mysql5.6</h2><a id="more"></a>
<h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ yum install gcc gcc-c++ -y</div></pre></td></tr></table></figure>
<h3 id="安装apr"><a href="#安装apr" class="headerlink" title="安装apr"></a>安装apr</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ tar zxvf apr-1.5.2.tar.gz</div><div class="line">$ <span class="built_in">cd</span> apr-1.5.2</div><div class="line">$ ./configure --prefix=/usr/<span class="built_in">local</span>/apr-1.5.2</div><div class="line">$ make &amp;&amp; make install</div></pre></td></tr></table></figure>
<h3 id="安装apr-util"><a href="#安装apr-util" class="headerlink" title="安装apr-util"></a>安装apr-util</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ tar zxvf apr-util-1.5.4.tar.gz</div><div class="line">$ <span class="built_in">cd</span> apr-util-1.5.4</div><div class="line">$ ./configure --prefix=/usr/<span class="built_in">local</span>/apr-util-1.5.4 --with-apr=/usr/<span class="built_in">local</span>/apr-1.5.2</div><div class="line">$ make &amp;&amp; make install</div></pre></td></tr></table></figure>
<h3 id="安装pcre"><a href="#安装pcre" class="headerlink" title="安装pcre"></a>安装pcre</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ tar zxvf pcre-8.39.tar.gz</div><div class="line">$ <span class="built_in">cd</span> pcre-8.39</div><div class="line">$ ./configure --prefix=/usr/<span class="built_in">local</span>/pcre-8.39</div><div class="line">$ make &amp;&amp; make install</div></pre></td></tr></table></figure>
<h3 id="安装Apache"><a href="#安装Apache" class="headerlink" title="安装Apache"></a>安装Apache</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ tar zxvf httpd-2.4.20.tar.gz</div><div class="line">$ <span class="built_in">cd</span> httpd-2.4.20</div><div class="line">$ ./configure --prefix=/usr/<span class="built_in">local</span>/apache-2.4.20 --enable-so --with-apr=/usr/<span class="built_in">local</span>/apr-1.5.2 --with-apr-util=/usr/<span class="built_in">local</span>/apr-util-1.5.4 --with-pcre=/usr/<span class="built_in">local</span>/pcre-8.39</div><div class="line">$ make &amp;&amp; make install</div></pre></td></tr></table></figure>
<h3 id="安装PHP（Apache模块）"><a href="#安装PHP（Apache模块）" class="headerlink" title="安装PHP（Apache模块）"></a>安装PHP（Apache模块）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 依赖</span></div><div class="line">$ yum install gcc gcc-c++ libxml2 libxml2-devel autoconf libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel  zlib zlib-devel glibc glibc-devel glib2 glib2-devel libevent</div><div class="line"><span class="comment"># 配置,先编译mysql,gd扩展</span></div><div class="line">$ ./configure --prefix=/usr/<span class="built_in">local</span>/php-5.6.22 --with-apxs2=/usr/<span class="built_in">local</span>/apache-2.4.20/bin/apxs --with-pdo-mysql --with-mysql --with-gd </div><div class="line"><span class="comment"># 编译</span></div><div class="line">$ make &amp;&amp; make install</div></pre></td></tr></table></figure>
<h3 id="安装Mysql"><a href="#安装Mysql" class="headerlink" title="安装Mysql"></a>安装Mysql</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 依赖</span></div><div class="line">$ yum install install gcc gcc-c++ cmake ncurses-devel</div><div class="line">$ tar zxvf mysql-5.6.31.tar.gz </div><div class="line"><span class="comment"># 使用cmake工具编译</span></div><div class="line">$ cmake . -DCMAKE_INSTALL_PREFIX=/usr/<span class="built_in">local</span>/mysql-5.6.31 -DMYSQL_DATADIR=/usr/<span class="built_in">local</span>/mysql-5.6.31/data </div><div class="line">$ make &amp;&amp; make install</div></pre></td></tr></table></figure>
<h4 id="添加mysql用户"><a href="#添加mysql用户" class="headerlink" title="添加mysql用户"></a>添加mysql用户</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ groupadd mysql </div><div class="line"><span class="comment"># 添加mysql用户同时制定用户组</span></div><div class="line">$ useradd -g mysql mysql</div></pre></td></tr></table></figure>
<h4 id="mysqld守护进程"><a href="#mysqld守护进程" class="headerlink" title="mysqld守护进程"></a>mysqld守护进程</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ cp /usr/<span class="built_in">local</span>/mysql-5.6.31/support-files/mysql.server  /etc/init.d/mysqld</div><div class="line">$ chmode a+rx mysqld </div><div class="line">$ chkconfig --list mysqld</div><div class="line">$ chkconfig --add mysqld</div></pre></td></tr></table></figure>
<p>More info: <a href="http://www.cnblogs.com/panjun-Donet/archive/2010/08/10/1796873.html" target="_blank" rel="external">chkconfig</a></p>
<h3 id="httpd守护进程"><a href="#httpd守护进程" class="headerlink" title="httpd守护进程"></a>httpd守护进程</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ cp /usr/<span class="built_in">local</span>/apache-2.4.20/bin/apachectl  /etc/init.d/httd</div><div class="line">$ vi /etc/init.d/httd</div><div class="line"><span class="comment"># 添加</span></div><div class="line"><span class="comment"># chkconfig 235 65 85</span></div><div class="line"><span class="comment"># description user add hpptd service</span></div></pre></td></tr></table></figure>
<h3 id="配置php基本设置"><a href="#配置php基本设置" class="headerlink" title="配置php基本设置"></a>配置php基本设置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 去php源码目录复制</span></div><div class="line">$ cp php-ini.development /usr/<span class="built_in">local</span>/php5.6.22/lib/php.ini</div><div class="line"><span class="comment"># 设置时间</span></div><div class="line">$ vi  /usr/<span class="built_in">local</span>/php5.6.22/lib/php.ini</div></pre></td></tr></table></figure>
<p><img src="http://oo6is6uyg.bkt.clouddn.com/date.png" alt="设置时间"></p>
<h3 id="配置apache基本设置"><a href="#配置apache基本设置" class="headerlink" title="配置apache基本设置"></a>配置apache基本设置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ vi /conf/httpd.conf </div><div class="line">$ &lt;FilesMatch \.php$&gt;</div><div class="line">$	SetHandler application/x-httpd-php</div><div class="line">$ &lt;/FilesMatch&gt;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      Linux
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2017/04/09/hello-world/"/>
    <id>http://yoursite.com/2017/04/09/hello-world/</id>
    <published>2017-04-09T05:51:52.355Z</published>
    <updated>2017-04-09T05:51:52.302Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.<br><a id="more"></a></p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
